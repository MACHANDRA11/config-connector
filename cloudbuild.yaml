steps:

- name: 'gcr.io/devtools-317213/cloud-sdk:v1.0'
  id: Deploy
  entrypoint: 'bash'
  args:
  - -c
  - |
    source package.sh
    echo "deploying code in cluster"
    kpt version
    kpt pkg init cc-files/
    kpt cfg create-setter cc-files/ name dravid --field="metadata.name"
    # kpt cfg set cc-files/  name smtrfds
    kpt live init cc-files/
    kpt live apply cc-files/ -n test-cc
    kpt live status cc-files/ -n test-cc

  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=test-config-connector'

# - name: 'gcr.io/cloud-builders/kubectl'
#   id: Deploy
#   args:
#   - 'apply'
#   - '-f'
#   - 'cc-files/bg1.yaml'
#   - '-n'
#   - 'test-cc'
#   env:
#   - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
#   - 'CLOUDSDK_CONTAINER_CLUSTER=test-config-connector'

# steps:
# - name: 'gcr.io/cloud-builders/git'
#   secretEnv: ['SSH_KEY']
#   entrypoint: 'bash'
#   args:
#   - -c
#   - |
#     echo "$$SSH_KEY" >> /root/.ssh/id_rsa
#     chmod 400 /root/.ssh/id_rsa
#     cp known_hosts.github /root/.ssh/known_hosts
#   volumes:
#   - name: 'ssh'
#     path: /root/.ssh


  # This step builds the container image.
# - name: 'gcr.io/cloud-builders/docker'
#   id: Build
#   args:
#   - 'build'
#   - '-t'
#   - 'gcr.io/$PROJECT_ID/test_cha:8'
#   - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
# - name: 'gcr.io/cloud-builders/docker'
#   id: Push
#   args:
#   - 'push'
#   - 'gcr.io/$PROJECT_ID/test_cha:8'

# images: ['gcr.io/$PROJECT_ID/test_cha:8']